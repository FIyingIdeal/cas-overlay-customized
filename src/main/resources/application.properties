##
# CAS Server Context Configuration
#
server.context-path=/cas
server.port=8443

# STEP 5添加认证服务
cas.serviceRegistry.initFromJson=true

##
# Service Ticket
#https://apereo.github.io/cas/5.0.x/installation/Configuration-Properties.html#cas-server
#
# Ticket可使用次数，默认是1次
cas.ticket.st.numberOfUses=10
# Ticket有效时间，默认是10s
cas.ticket.st.timeToKillInSeconds=1800

##
# CORS Configuration
#
cas.httpWebRequest.cors.enabled=true
# cas.httpWebRequest.cors.allowCredentials=true
# cas.httpWebRequest.cors.allowOrigins[0]=*
# cas.httpWebRequest.cors.allowMethods[0]=*
# cas.httpWebRequest.cors.allowHeaders[0]=*
# cas.httpWebRequest.cors.maxAge=3600
# cas.httpWebRequest.cors.exposedHeaders[0]=

##
# Disable HTTPS 配置该选项使CAS可以在非HTTPS的情景下依然可用，虽然在登录界面可能会有提示，但不影响
#
cas.tgc.secure=false

##
# Logout设置，允许logout以后跳转到请求路径的service参数值指定的位置
#
cas.logout.followServiceRedirects=true

#server.ssl.key-store=file:/etc/cas/thekeystore
#server.ssl.key-store-password=changeit
#server.ssl.key-password=changeit
# server.ssl.ciphers=
# server.ssl.client-auth=
# server.ssl.enabled=
# server.ssl.key-alias=
# server.ssl.key-store-provider=
# server.ssl.key-store-type=
# server.ssl.protocol=
# server.ssl.trust-store=
# server.ssl.trust-store-password=
# server.ssl.trust-store-provider=
# server.ssl.trust-store-type=

# server.max-http-header-size=2097152
# server.use-forward-headers=true
# server.connection-timeout=20000
# server.error.include-stacktrace=ALWAYS

# server.compression.enabled=true
# server.compression.mime-types=application/javascript,application/json,application/xml,text/html,text/xml,text/plain

# server.tomcat.max-http-post-size=2097152
# server.tomcat.basedir=build/tomcat
# server.tomcat.accesslog.enabled=true
# server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
# server.tomcat.accesslog.suffix=.log
# server.tomcat.max-threads=10
# server.tomcat.port-header=X-Forwarded-Port
# server.tomcat.protocol-header=X-Forwarded-Proto
# server.tomcat.protocol-header-https-value=https
# server.tomcat.remote-ip-header=X-FORWARDED-FOR
# server.tomcat.uri-encoding=UTF-8

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

##
# CAS Cloud Bus Configuration
#
spring.cloud.bus.enabled=false
# spring.cloud.bus.refresh.enabled=true
# spring.cloud.bus.env.enabled=true
# spring.cloud.bus.destination=CasCloudBus
# spring.cloud.bus.ack.enabled=true

endpoints.enabled=false
endpoints.sensitive=true

endpoints.restart.enabled=false
endpoints.shutdown.enabled=false

management.security.enabled=true
management.security.roles=ACTUATOR,ADMIN
management.security.sessions=if_required
management.context-path=/status
management.add-application-context-header=false

security.basic.authorize-mode=role
security.basic.enabled=false
security.basic.path=/cas/status/**

##
# CAS Web Application Session Configuration
#
server.session.timeout=300
server.session.cookie.http-only=true
server.session.tracking-modes=COOKIE

##
# CAS Thymeleaf View Configuration
#
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML
##
# CAS Log4j Configuration
#
# logging.config=file:/etc/cas/log4j2.xml
server.context-parameters.isLog4jAutoInitializationDisabled=true

##
# CAS AspectJ Configuration
#
spring.aop.auto=true
spring.aop.proxy-target-class=true

##
# CAS Authentication Credentials
# CAS 默认的用户名和密码，实际系统需要注释掉
#cas.authn.accept.users=casuser::Mellon

##
# Database Authentication : https://apereo.github.io/cas/5.2.x/installation/Database-Authentication.html
# password明文存储密码验证的数据源配置
#
#cas.authn.jdbc.query[0].sql=select * from t_user where username=?
#cas.authn.jdbc.query[0].healthQuery=
#cas.authn.jdbc.query[0].isolateInternalQueries=false
#cas.authn.jdbc.query[0].url=jdbc:mysql://127.0.0.1:3306/hiynn_cas_permissions_system?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false
#cas.authn.jdbc.query[0].failFast=true
#cas.authn.jdbc.query[0].isolationLevelName=ISOLATION_READ_COMMITTED
#cas.authn.jdbc.query[0].dialect=org.hibernate.dialect.MySQLDialect
#cas.authn.jdbc.query[0].leakThreshold=10
#cas.authn.jdbc.query[0].propagationBehaviorName=PROPAGATION_REQUIRED
#cas.authn.jdbc.query[0].batchSize=1
#cas.authn.jdbc.query[0].user=root
##cas.authn.jdbc.query[0].ddlAuto=create-drop
#cas.authn.jdbc.query[0].maxAgeDays=180
#cas.authn.jdbc.query[0].password=root
#cas.authn.jdbc.query[0].autocommit=false
#cas.authn.jdbc.query[0].driverClass=com.mysql.jdbc.Driver
#cas.authn.jdbc.query[0].idleTimeout=5000
## cas.authn.jdbc.query[0].credentialCriteria=
## cas.authn.jdbc.query[0].name=
## cas.authn.jdbc.query[0].order=0
## cas.authn.jdbc.query[0].dataSourceName=
## cas.authn.jdbc.query[0].dataSourceProxy=false
#cas.authn.jdbc.query[0].fieldPassword=password

##
# password使用数据库private salt加密验证的数据源配置
# CAS本身就是借助Shiro进行的加密，见CAS源码 QueryAndEncodeDatabaseAuthenticationHandler#digestEncodedPassword(String, Map)
# 参考：https://apereo.github.io/cas/5.2.x/installation/Configuration-Properties.html#database-authentication
#
# cas.authn.jdbc.encode[0].numberOfIterationsFieldName=numIterations
cas.authn.jdbc.encode[0].numberOfIterations=2
cas.authn.jdbc.encode[0].saltFieldName=salt
cas.authn.jdbc.encode[0].sql=select * from t_user where username=?
cas.authn.jdbc.encode[0].algorithmName=MD5
cas.authn.jdbc.encode[0].passwordFieldName=password
cas.authn.jdbc.encode[0].url=jdbc:mysql://127.0.0.1:3306/hiynn_cas_permissions_system?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false
# dialect配置请参考 https://apereo.github.io/cas/5.2.x/installation/JDBC-Drivers.html
cas.authn.jdbc.encode[0].dialect=org.hibernate.dialect.MySQLDialect
cas.authn.jdbc.encode[0].user=root
cas.authn.jdbc.encode[0].password=root
cas.authn.jdbc.encode[0].driverClass=com.mysql.jdbc.Driver
# cas.authn.jdbc.encode[0].staticSalt=
# cas.authn.jdbc.encode[0].expiredFieldName=
# cas.authn.jdbc.encode[0].disabledFieldName=
# cas.authn.jdbc.encode[0].healthQuery=
# cas.authn.jdbc.encode[0].isolateInternalQueries=false
# cas.authn.jdbc.encode[0].failFastTimeout=1
# cas.authn.jdbc.encode[0].isolationLevelName=ISOLATION_READ_COMMITTED
# cas.authn.jdbc.encode[0].leakThreshold=10
# cas.authn.jdbc.encode[0].propagationBehaviorName=PROPAGATION_REQUIRED
# cas.authn.jdbc.encode[0].batchSize=1
# cas.authn.jdbc.encode[0].ddlAuto=create-drop
# cas.authn.jdbc.encode[0].maxAgeDays=180
# cas.authn.jdbc.encode[0].autocommit=false
# cas.authn.jdbc.encode[0].idleTimeout=5000
# cas.authn.jdbc.encode[0].credentialCriteria=
# cas.authn.jdbc.encode[0].name=
# cas.authn.jdbc.encode[0].order=0
# cas.authn.jdbc.encode[0].dataSourceName=
# cas.authn.jdbc.encode[0].dataSourceProxy=false
# Hibernate-specific properties (i.e. `hibernate.globally_quoted_identifiers`)
# cas.authn.jdbc.encode[0].properties.propertyName=propertyValue

##
# CAS 多属性返回
# 参考：cas-master cas-server-core-configuration/org/apereo/cas/configuration/model/core/authentication/JdbcPrincipalAttributesProperties.java
#
cas.authn.attributeRepository.jdbc[0].singleRow=true
cas.authn.attributeRepository.jdbc[0].order=0
cas.authn.attributeRepository.jdbc[0].url=jdbc:mysql://127.0.0.1:3306/hiynn_cas_permissions_system?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false
cas.authn.attributeRepository.jdbc[0].username=username
cas.authn.attributeRepository.jdbc[0].user=root
# sql中的where字句必须要这么写，cas会自动凭拼接
cas.authn.attributeRepository.jdbc[0].password=root
cas.authn.attributeRepository.jdbc[0].sql=select * from t_user where {0}
cas.authn.attributeRepository.jdbc[0].dialect=org.hibernate.dialect.MySQLDialect
cas.authn.attributeRepository.jdbc[0].ddlAuto=none
cas.authn.attributeRepository.jdbc[0].driverClass=com.mysql.jdbc.Driver
cas.authn.attributeRepository.jdbc[0].leakThreshold=10
cas.authn.attributeRepository.jdbc[0].propagationBehaviorName=PROPAGATION_REQUIRED
cas.authn.attributeRepository.jdbc[0].batchSize=1
cas.authn.attributeRepository.jdbc[0].healthQuery=SELECT 1
cas.authn.attributeRepository.jdbc[0].failFast=true

